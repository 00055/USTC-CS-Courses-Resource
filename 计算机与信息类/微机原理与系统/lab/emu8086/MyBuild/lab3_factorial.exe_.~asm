;name:
;author: mbinary
;time: 2018-11
;function: factorial


include 'emu8086.inc'
;include 'mymacro.inc'
;include 'factorial.inc'

define_print_num_uns
define_print_num

.model small
.stack 200h
.data  400h
tmp dw 10 dup(0)
buffer db 10 dup(0)
size dw 10
.code
.startup
mov cl,19
call factorial
call printArr
jmp quit

print8 proc
; print a 8 bits num store in al
push bx
mov ah,0
mov bx,10h
div bl
mov bl,ah
call print4
mov al,bl
call print4
pop bx
ret
print8 endp

print4 proc
; print a 4bits num store in al
cmp al,9
jg hex
add al,'0'
jmp prt
hex:
add al ,55
prt:
mov ah,0eh
int 10h
ret
print4 endp

mulBig proc
; num: db
; buffer: db arr
; size : dw   length of buffer
push di
push si
push ax
push bx
push cx
push dx

xor bh,bh
mov bl,cl
mov cx,size
lea si,buffer
lea di,tmp
add si,cx

zero:
dec si
cmp [si],0
loope zero

mov cx,si
lea si,buffer
sub cx,si
inc cx
push cx
mov dx,0

multiply:
xor ah,ah
mov al,[si]
mul bl
add dl,al
mov [di],dx
xor dh,dh
mov dl,ah
inc si
add di,2
loop multiply

mov [di],dx
mov [di+2],00h

pop cx
lea si,tmp
lea di,buffer
mov bx,100h
adjust:
mov dx,0
mov ax,[si]
div bx
add ax,[si+2]
mov [si+2],ax
mov [di],dx
inc di
add si,2
loop adjust

mov [di],al

pop dx
pop cx
pop bx
pop ax
pop si
pop di
ret
mulBig endp

factorial proc
; n:db
; buffer db arr
push cx
push si
mov ch,0
lea si,buffer
mov [si],1
fac:
call mulBig
call printArr
printn ''
loop fac

pop si
pop cx
ret
factorial endp

printArr proc
; buffer db arr
; n dw
push si
push cx
push ax
lea si,buffer
mov cx,size
add si,cx

oneloop:
dec si
mov al,[si]
call print8
putc ' '
loop oneloop

pop ax
pop cx
pop si

ret
printArr endp

quit:
.exit
end




; [SOURCE]: C:\Users\mbinary\Desktop\Î¢»úÔ­Àí\lab\emu8086\MySource\lab3_factorial.asm
